封装（有时称为数据隐藏）是与对象有关的一个重要哦概念，
从形式来看，封装不过是将数据和行为组合在一个包中，并对对象的使用者隐藏了数据的实现方式。
对象中的数据称为实例域，操纵数据的过程称为方法。
对于每个特定的类实例，都有一组特定的实例阈值，这些值的集合就是这个对象的房钱状态。
无论何时，只要向对象发送一个消息，它的状态就有可能发生改变。

实现封装的关键在于绝对不能让类中的方法直接访问其他类的实例域，
程序仅通过对象的方法与对象数据进行交互。
封装给予对象“黑盒”特性，这是提高重用性和可靠性的关键。
这意味着一个类可以全面地改变存储数据的方式，
只要仍旧使用同样的方法操作数据，
其他对象就不会知道或者介意所发生的变化。
OOP的另一个原则会让用户自定义JAVA类变得亲儿易聚，
这就是：
类可以通过扩展另一个类来创建，事实上，在java中，所有的类都源自一个基类，他就是Object.
