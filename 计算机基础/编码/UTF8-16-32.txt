...(UTF = Unicode Transfromation Format)



《UTF32》
......固定以4字节为一个单元表示字符，不够的就使用0进行补位
......（一般UTF32很少使用，虽然计算简单，但是很冗余！）



《UTF16》
......一般以2字节为一个单元表示字符
......如果超过2字节的字符，就使用【代理区技术】，进行编码，
......（一般UTF16在机器中使用居多！）

《UTF16的编码规则》
......如果unicode位数小于0x10000的，就直接使用2字节表示；(以下2个字节代表一个WORD)

......如果大于0x10000，就先减去0x10000,然后将计算出来的二进制位，【拆分前后各10位】，拼到110110xxxxxxxxxx 110111xxxxxxxxxx这个格式里面，然后就可以算出这个UTF16的码点了；

......例如：Unicode编码0x20C30，减去0x10000后，得到0x10C30，写成二进制是：0001 0000 1100 0011 0000。用前10位依次替代模板中的y，用后10位依次替代模板中的x，就得到：1101100001000011 1101110000110000，即0xD843 0xDC30。 

......按照上述规则，Unicode编码0x10000-0x10FFFF的UTF-16编码有两个WORD，第一个WORD的高6位是110110，第二个WORD的高6位是110111。可见，第一个WORD的取值范围（二进制）是11011000 00000000到11011011 11111111，即0xD800-0xDBFF。第二个WORD的取值范围（二进制）是11011100 00000000到11011111 11111111，即0xDC00-0xDFFF。

......为了将一个WORD的UTF-16编码与两个WORD的UTF-16编码区分开来，Unicode编码的设计者将【0xD800-0xDFFF保留下来】，并称为代理区（Surrogate）：

______D800－DB7F　║　High Surrogates ║　高位替代 　　
______DB80－DBFF　║　High Private Use Surrogates　║　高位专用替代 　　
______DC00－DFFF　║　Low Surrogates　 ║　低位替代 　　

......高位替代就是指这个范围的码位是两个WORD的UTF-16编码的第一个WORD。低位替代就是指这个范围的码位是两个WORD的UTF-16编码的第二个WORD。那么，高位专用替代是什么意思？我们来解答这个问题，顺便看看怎么由UTF-16编码推导Unicode编码。

......如果一个字符的UTF-16编码的第一个WORD在0xDB80到0xDBFF之间，那么它的Unicode编码在什么范围内？我们知道第二个WORD的取值范围是0xDC00-0xDFFF，所以这个字符的UTF-16编码范围应该是0xDB80 0xDC00到0xDBFF 0xDFFF。我们将这个范围写成二进制：

......1101101110000000 11011100 00000000 - 1101101111111111 1101111111111111 　　按照编码的相反步骤，取出高低WORD的后10位，并拼在一起，

......得到1110 0000 0000 0000 0000 - 1111 1111 1111 1111 1111即0xe0000-0xfffff，按照编码的相反步骤再加上0x10000，得到0xf0000-0x10ffff。

......这就是UTF-16编码的第一个WORD在0xdb80到0xdbff之间的Unicode编码范围，即平面15和平面16。因为Unicode标准将平面15和平面16都作为专用区，所以0xDB80到0xDBFF之间的保留码位被称作高位专用替代。



《UTF8》
...... 按需变换存储方式，最小1字节，最大4字节，
...... 换算的时候，一般从后往前截取，每6位一跳，然后套上10
...... （一般UTF8在网络传输中使用居多！）


《UTF8的编码规则》
...... 首先，字节的首位是判断位，
......【0】代表只有1字节，完全可以取代ascii码
......【110】代表有2字节，固定格式【110xxxxx 10xxxxxx】
......【1110】代表有3字节，固定格式【1110xxxxx 10xxxxxx 10xxxxxx】
...... 依此类推...




《判断文件使用的编码》
...... 根据文件头的字节组判断
......【EF BB BF】 UTF8
......【FF FE】	UTF16 大头
......【FE FF】	UTF16 小头
......【FF FE 00 00】 UTF32 小头
......【00 00 FE FF】 UTF32 大头

