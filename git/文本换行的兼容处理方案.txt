在跨平台下开发应用，首先应该考虑的是各种兼容性的问题，这里讨论在windows和Linux下联合开发而导致换行符不兼容的问题：

linux操作系统下的换行符为/n，而windows操作系统下的换行符则为/r/n，这导致在程序执行的时候会出现一些问题，下面举个我遇到的问题和解决方法：

问题描述：

在windows下编写的shell脚本，通过FileZilla上传到linux服务器上执行时，会出现/r的命令不存在的错误，这是因为linux下的shell脚本只识别/n为换行符，而把/r当做程序的指令，这样就会出现脚本运行不成功的现象。



解决办法：

（1）Git可以在你提交时自动地把行结束符CRLF转换成LF，而在签出代码时把LF转换成CRLF，从而实现两操作系统的兼容性。可以用core.autocrlf来打开此项功能， 如果是在Windows系统上，把它设置成 true，这样当签出代码时，LF会被转换成CRLF：执行命令：git config --global core.autocrlf true

 

（2）把core.autocrlf设置成input来告诉Git在提交时把CRLF转换成LF，签出时不转换：执行命令：git config --global core.autocrlf input

 

（3）如果你是Windows程序员，且正在开发仅运行在Windows上的项目，可以设置false 取消此功能，不进行变换，也就是一直是CRLF。把回车符记录在库中：执行命令：git config --global core.autocrlf input