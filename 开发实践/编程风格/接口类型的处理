本着宁缺毋滥的原则，一个返回给前端使用的接口的所有属性，参数，即使传个空值，也不要互相替用;

否则,替用性的接口的使用结果是,输出方很舒服(有可能双方维护起来都很麻烦)，但是在使用方就是灾难性的！
因为这样既看不到接口的全貌，影响接口的抽象整合，而且在维护的过程中，需要时时刻刻留意接口的属性和参数，简直使人崩溃！

接下来，就是前端需要输出的接口，如果是基本相同的两个模板，就不需要定义两个不同的属性，因为前端的模块管理非常不整洁，
需要后端人员配合！
例如：下面需要定义的一个dataType，有A和B两个包，
{
    "key": "ANTISTEEL_CTYPE",
    "cartype": "DBTable/ATmatch/bmw/CAS4/keymatch"	//键名和键值完全扭头不对马嘴！
}
{    
    "key": "CTYPE",
    "cartype": "banz"
}

两个包请求的数据基本都一样，但是后端为了方便自己查询，就定义了两个接口类型，
而前端在处理相同结果的基础上，也必须分拆出两个模块，否则就需要做逻辑拆分，
使布局变得十分难看，所以，在一开始，这种模式的接口就应该被拒绝，而不是一次一次的放纵，
导致慢慢累加到项目瘫痪的地步！

应该要并成以下接口。
{
    "key": "CTYPE",
    "businessType":"ANTISTEEL",
    "cartype": "banz",
    "prevPath": "DBTable/ATmatch/bmw/CAS4/keymatch",
}

