Array:
====================================================
#普通数组的长度一般初始化的时候就已经确定了，并且很难去修改；

int[] arr = {12,3,4,5,2,6,1};
int[] arr1 = {12,3,4,5,2,6,33};
int[][] arr2 = {{1,2},{3,4}};   // 二维数组转成字符串需要 Arrays.deepToString(arr2)
Object[] arr3 = new Object[10];
int[] arr4 = new int[10];

System.arraycopy(arr,1,arr1,4,1);


ArrayList:
====================================================
#arrayList可以动态根据填充的数量来调整长度
#不过按照书上的逻辑，原array满了之后需要重新拷贝到一个更长的数组，
#那么来说，其实自己一样可以定义一个动态的数组，就像学数据结构的时候自己创建树，链表，队列一样
> ArrayList<Integer> c = new ArrayList<Integer>();//默认10个空间，这里需要注意，类型参数不能是基础类型，所以需要用到对象包装器
> c.add(123);
> c.set(0,1234); //修改1号坑的值
> c.set(1,12354); //修改2号坑的值，但是2号坑应该是空指针，所以会报错
> c.get(0); // 123
> c.size(); // 1
> c.remove(0);  // 删除1号坑
> c.add(111);
> c.add(222); 
> c.add(0,333); // 直接在1号坑插入一个值，那么其他值就会依次往后移
> c.trimToSize(c.size()); //消减列表尺寸，但是如果后面再对数组大小做调整，就会重新移动存储块，将花费更多的时间？


总结：
1，array一旦创建，就是固定长度，并且全部填满，根据数据类型默认填充（Object[null],int[0]）
2，ArrayList可以动态改变长度，默认不填充数据，使用instance.size()可以获取长度
3，访问和设置元素的方式不同，array是用[]来设置和访问，arrl需要用add,set,get,remove来访问和设置