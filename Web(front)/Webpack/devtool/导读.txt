...分别有5种选项，互相可交互搭配，形成以下几种结果，除了eval-source-map测试过，其他都还只是网文上的答案，
...除了eval-source-map和cheap,inline之间的体积和错误提示有明显的区别，其他选项还没有具体测试和比对，
...基于节约时间成本的考虑，
...现在的方案可以定为：
...在开发环境使用：eval-source-map，方便调试，
...最终输出产品时，替换成，cheap-source-map 或者  inline-source-map;(不过，好像即使不使用map，最终的错误提示也没什么区别。。。)

______________________________=
eval:
source-map:
eval-source-map:    //亲自测试：打包后文件变大，但是错误提示会很完整
cheap-source-map:
inline-source-map:
cheap-module-source-map:
cheap-module-eval-source-map:   //这种情况下，浏览器会把debug映射到你项目的源码，也就是说你可以在你的源码里面进行断点调试



...|值得注意的是：
之前开发遇到过一个问题，就是在使用DLLPlugin的打包库文件的时候，
devtool设置成了cheap-module-eval-source-map，
然后，业务代码在打包的时候也设置成了cheap-module-eval-source-map，
在这种情况下，遇到BUG的时候，错误信息只会追踪到某个库文件就停止了，

也就是说，【在Dll包捕捉到BUG的时候，就把错误信息输出了，不会再往上冒泡】，
就会导致--即使你只是在export的时候，打错一个字母，它也不会给你准确的信息，
只会提示你，使用到export的那个库出了问题~

最终就是，你的业务代码的cheap-module-eval-source-map设置基本没有用~









blog url => https://segmentfault.com/a/1190000008315937


